@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject OrganizationProps OrganizationProps

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
  <MudAppBar Elevation="0" Dense="true">
    <MudIconButton Color="Color.Inherit" Edge="Edge.Start" Icon="@Icons.Material.Filled.Menu" OnClick="@(e => DrawerToggle())"/>
    <MudSpacer/>
    <MudMenu AnchorOrigin="Origin.BottomCenter" Color="Color.Inherit" Dense Icon="@Icons.Material.Filled.MoreVert">
      <AuthorizeView>
        <Authorized>
          <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="Logout">Log out</MudMenuItem>
        </Authorized>
        <NotAuthorized>
          <MudMenuItem Href="authentication/login" Icon="@Icons.Material.Filled.Login">Log in</MudMenuItem>
        </NotAuthorized>
      </AuthorizeView>
    </MudMenu>
  </MudAppBar>
  <MudDrawer @bind-Open="@drawerOpen" Breakpoint="Breakpoint.Sm" Elevation="1" Variant="@DrawerVariant.Mini" ClipMode="@DrawerClipMode.Docked">
    <NavMenu/>
  </MudDrawer>
  <MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Large" Class="my-0 ml-0 mr-0 pt-1">
      @Body
    </MudContainer>
  </MudMainContent>
</MudLayout>

@code {
  bool drawerOpen = true;

  protected override async Task OnInitializedAsync()
  {
    await OrganizationProps.LoadOrganizationsAsync();
  }

  private void DrawerToggle()
  {
    drawerOpen = !drawerOpen;
  }

  private void Logout()
  {
    NavigationManager.NavigateToLogout("authentication/logout");
  }

}