@page "/"

@inject ProjectApi ProjectApi
@inject ProjectState ProjectState
@inject NavigationManager NavigationManager

<PageTitle>Projects</PageTitle>

<DataContainer HasData="@(projects is not null)">
  <DataTemplate>
    <MudDataGrid T="Project" Items="projects" Hover="true" QuickFilter="QuickFilterFunc" Style="align-items: center;">
      <ToolBarContent>
        <MudText Typo="Typo.h6">Projects</MudText>
        <MudSpacer/>
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>

      </ToolBarContent>
      <Columns>
        <HierarchyColumn T="Project" />
        <PropertyColumn Property="x => x.Name" Title="Name"/>
        <PropertyColumn Property="x => x.FriendlyName" Title="Friendly name"/>
        <TemplateColumn Title="Base URL">
          <CellTemplate>
            <UrlFriendlyProject Project="context.Item"></UrlFriendlyProject>
          </CellTemplate>
        </TemplateColumn>
      </Columns>
      <ChildRowContent>
        <DataContainer HasData="context.Item.RequestResponses.Any()">
          <DataTemplate>
            @foreach (RequestResponsePair rrpair in context.Item.RequestResponses)
            {
              <MudCard>
                <MudText Typo="Typo.h3">@rrpair.Name</MudText>
                <MudText Typo="Typo.body1">@rrpair.Description</MudText>
                <MudText Typo="Typo.body2">@rrpair.Request.Summary.Method</MudText>
              </MudCard>
            }
          </DataTemplate>
        </DataContainer>
        <MudButton OnClick="@((e) => NavigateToUpload(context.Item))" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Class="mt-2">Add RRPair</MudButton>
      </ChildRowContent>
    </MudDataGrid>
  </DataTemplate>
</DataContainer>
<MudButton Href="/projects/addproject" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Class="mt-2">Add project</MudButton>

@code {

  private string? searchString;
  private Func<Project, bool> QuickFilterFunc => row => string.IsNullOrWhiteSpace(searchString) || row.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase) || row.FriendlyName.Contains(searchString, StringComparison.OrdinalIgnoreCase);

  private List<Project>? projects;
  protected override async Task OnInitializedAsync()
  {
    ProjectState.SelectedProject = null;
    projects = await ProjectApi.GetProjects("goldlight");
  }

  private void NavigateToUpload(Project project)
  {
    ProjectState.SelectedProject = project;
    NavigationManager.NavigateTo("/rrpair/upload/");
  }
}
